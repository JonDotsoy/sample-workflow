name: Build and Publish

permissions:
  contents: 'read'
  id-token: 'write'

on:
  workflow_call:
    inputs:
      app_version:
        type: string
        required: true
      app_release_name:
        type: string
        required: true

    outputs:
      app_sha:
        description: "App sha"
        value: ${{ jobs.publish.outputs.app_sha }}
      app_version:
        description: "App version"
        value: ${{ jobs.publish.outputs.app_image_version }}

jobs:
  publish:
    runs-on:
      group: composable_gcp_ecommerce
    name: ${{ inputs.version }}
    outputs:
      app_sha: ${{ steps.slug.outputs.sha7 }}
      app_version: ${{ steps.slug.outputs.img_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get short SHA
        id: slug
        run: |
          echo "sha7=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_OUTPUT
          echo "img_version=$(grep appVersion "./gradle.properties" | cut -d '=' -f2)" >> $GITHUB_OUTPUT

      - name: Configure GCP Credentials
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: access_token
          project_id: ${{ vars.GCP_REGISTRY_PROJECT_ID }}
          workload_identity_provider: ${{ vars.GCP_REGISTRY_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.GCP_REGISTRY_SERVICE_ACCOUNT }}

      - name: Login to GCP Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: us-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Build, tag and push
        uses: docker/build-push-action@v5
        env:
          IMAGE_URL: us-docker.pkg.dev/${{ vars.GCP_ARTIFACT_REGISTRY }}/${{ inputs.app_release_name }}
        with:
          push: true
          tags: ${{ env.IMAGE_URL }}:latest,${{ env.IMAGE_URL }}:${{ steps.slug.outputs.sha7 }},${{ env.IMAGE_URL }}:${{ inputs.app_version }}
          cache-from: type=registry,ref=${{ env.IMAGE_URL }}:latest
          cache-to: type=inline
          build-args: |
            docker_image=${{ inputs.app_release_name }}:${{ steps.slug.outputs.sha7 }}
            IMAGE_VERSION=${{ steps.slug.outputs.img_version }}
            BUILDKIT_CONTEXT_KEEP_GIT_DIR=1
