name: CI

on:
  workflow_call:
    inputs:
      pact_participant:
        type: string
        required: true
      java_version:
        type: string
        default: 21
      java_distribution:
        type: string
        default: zulu
    secrets:
      pact_broker_token:
        required: true
      codacy_project_token:
        required: true
      _checkmarx_url:
        required: true
      _checkmarx_username:
        required: true
      _checkmarx_password:
        required: true
      _checkmarx_client_secret:
        required: true
      _sca_tenant:
        required: true
      _sca_username:
        required: true
      _sca_password:
        required: true

env:
  PACT_BROKER_BASE_URL: https://apply.pactflow.io
  JACOCO_REPORT_PATH: build/reports/jacoco/test/

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: ${{ inputs.java_distribution }}
          java-version: ${{ inputs.java_version }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.8

      - name: Unit tests (including Pact)
        run: ./gradlew test -DpactPublishResults=true

      - id: coverage
        name: Generate code coverage report
        run: ./gradlew jacocoTestReport

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ github.run_id }}
          path: ${{ env.JACOCO_REPORT_PATH }}
          retention-days: 1
          overwrite: true

      - name: Can i deploy? (Pact verification)
        run: |
          docker run --rm --network host \
          -e PACT_BROKER_BASE_URL=${{ env.PACT_BROKER_BASE_URL }} \
          -e PACT_BROKER_TOKEN=${{ secrets.pact_broker_token }} \
          pactfoundation/pact-cli:latest \
          broker can-i-deploy \
          --pacticipant ${{ inputs.pact_participant }} \
          --latest

      - name: Integration tests
        run: ./gradlew integrationTest

  code_coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Download code coverage results
      uses: actions/download-artifact@v4
      with:
        name: coverage-report-${{ github.run_id }}
        path: ${{ env.JACOCO_REPORT_PATH }}

    - name: Run codacy-coverage-reporter
      uses: codacy/codacy-coverage-reporter-action@v1
      with:
        project-token: ${{ secrets.codacy_project_token }}
        coverage-reports: ${{ env.JACOCO_REPORT_PATH }}jacocoTestReport.xml

  security_audit:
    runs-on: ubuntu-latest
    steps:
    - name: Checkmarx CxFlow Action
      uses: checkmarx-ts/checkmarx-cxflow-github-action@v1.9
      with:
        project: ${{ github.repository }}-PR
        team: "CxServer/Liverpool/Ecommerce/Backend"
        checkmarx_url: ${{ secrets._checkmarx_url }}
        checkmarx_username: ${{ secrets._checkmarx_username }}
        checkmarx_password: ${{ secrets._checkmarx_password }}
        checkmarx_client_secret: ${{ secrets._checkmarx_client_secret }}
        incremental: false
        break_build: true
        scanners: sca, sast
        sca_api_url: "https://api.scacheckmarx.com"
        sca_app_url: "https://sca.scacheckmarx.com"
        sca_access_control_url: "https://platform.checkmarx.net"
        sca_tenant: ${{ secrets._sca_tenant }}
        sca_username: ${{ secrets._sca_username }}
        sca_password: ${{ secrets._sca_password }}
        bug_tracker: NONE
        params: --namespace=${{ github.repository_owner }} --repo-name=${{ github.event.repository.name }} --branch=${{ github.head_ref }} --merge-id=${{ github.event.number }} --cx-flow.filterSeverity --cx-flow.filterCategory

